/*
   This file was generated automatically by Alchitry Labs version 1.2.0.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input usb_rx,
    output reg usb_tx,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip,
    input cout,
    input s
  );
  
  
  
  reg rst;
  
  wire [2-1:0] M_fa_check_addResult;
  wire [1-1:0] M_fa_check_checkResult;
  reg [3-1:0] M_fa_check_counter_val;
  reg [1-1:0] M_fa_check_c0;
  reg [1-1:0] M_fa_check_s;
  fa_checker_1 fa_check (
    .counter_val(M_fa_check_counter_val),
    .c0(M_fa_check_c0),
    .s(M_fa_check_s),
    .addResult(M_fa_check_addResult),
    .checkResult(M_fa_check_checkResult)
  );
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_2 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [1-1:0] M_slowclk_value;
  counter_3 slowclk (
    .clk(clk),
    .rst(rst),
    .value(M_slowclk_value)
  );
  
  wire [3-1:0] M_cntr_value;
  counter_4 cntr (
    .clk(M_slowclk_value),
    .rst(rst),
    .value(M_cntr_value)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    usb_tx = usb_rx;
    led = 8'h00;
    io_led = 24'h000000;
    io_seg = 8'hff;
    io_sel = 4'hf;
    M_fa_check_counter_val = M_cntr_value;
    M_fa_check_c0 = cout;
    M_fa_check_s = s;
    io_led[0+0+0-:1] = M_cntr_value[0+0-:1];
    io_led[0+1+0-:1] = M_cntr_value[1+0-:1];
    io_led[0+2+0-:1] = M_cntr_value[2+0-:1];
    io_led[8+0+0-:1] = s;
    io_led[8+1+0-:1] = cout;
    io_led[0+6+1-:2] = M_fa_check_addResult;
    io_led[16+0+0-:1] = M_fa_check_checkResult;
  end
endmodule
